window.SIDEBAR_ITEMS = {"enum":[["CoordType","Specifies how xy coordinates are to be interpreted. Used by functions such as [`ComponentExt::position()`][crate::prelude::ComponentExt::position()] and [`TextExt::character_extents()`][crate::prelude::TextExt::character_extents()]"],["Layer","Describes the layer of a component"],["RelationType","Describes the type of the relation"],["Role","Describes the role of an object"],["ScrollType","Specifies where an object should be placed on the screen when using scroll_to."],["StateType","The possible types of states of an object"],["TextAttribute","Describes the text attributes supported"],["TextBoundary","Text boundary types used for specifying boundaries for regions of text. This enumeration is deprecated since 2.9.4 and should not be used. Use AtkTextGranularity with `atk_text_get_string_at_offset` instead."],["TextClipType","Describes the type of clipping required."],["TextGranularity","Text granularity types used for specifying the granularity of the region of text we are interested in."],["ValueType","Default types for a given value. Those are defined in order to easily get localized strings to describe a given value or a given subrange, using [`localized_name()`][Self::localized_name()]."]],"mod":[["prelude","Traits intended for blanket imports."]],"struct":[["Action","The ATK interface provided by UI components which the user can activate/interact with."],["Attribute","AtkAttribute is a string name/value pair representing a generic attribute. This can be used to expose additional information from an accessible object as a whole (see `atk_object_get_attributes()`) or an document (see `atk_document_get_attributes()`). In the case of text attributes (see `atk_text_get_default_attributes()`), [`TextAttribute`][crate::TextAttribute] enum defines all the possible text attribute names. You can use [`TextAttribute::name()`][crate::TextAttribute::name()] to get the string name from the enum value. See also [`TextAttribute::for_name()`][crate::TextAttribute::for_name()] and [`TextAttribute::value()`][crate::TextAttribute::value()] for more information."],["Component","The ATK interface provided by UI components which occupy a physical area on the screen. which the user can activate/interact with."],["Document","The ATK interface which represents the toplevel container for document content."],["EditableText","The ATK interface implemented by components containing user-editable text content."],["GObjectAccessible","This object class is derived from AtkObject and can be used as a basis implementing accessible objects."],["Hyperlink","An ATK object which encapsulates a link or set of links in a hypertext document."],["HyperlinkImpl","A queryable interface which allows AtkHyperlink instances associated with an AtkObject to be obtained. AtkHyperlinkImpl corresponds to AT-SPIâ€™s Hyperlink interface, and differs from AtkHyperlink in that AtkHyperlink is an object type, rather than an interface, and thus cannot be directly queried. FTW"],["HyperlinkStateFlags","Describes the type of link"],["Hypertext","The ATK interface which provides standard mechanism for manipulating hyperlinks."],["Image","The ATK Interface implemented by components which expose image or pixmap content on-screen."],["Misc","A set of ATK utility functions for thread locking"],["NoOpObject","An AtkObject which purports to implement all ATK interfaces."],["NoOpObjectFactory","The AtkObjectFactory which creates an AtkNoOpObject."],["Object","The base object class for the Accessibility Toolkit API."],["ObjectFactory","The base object class for a factory used to create accessible objects for objects of a specific GType."],["Plug","Toplevel for embedding into other processes"],["Range","A given range or subrange, to be used with [`Value`][crate::Value]"],["Rectangle","A data structure for holding a rectangle. Those coordinates are relative to the component top-level parent."],["Registry","An object used to store the GType of the factories used to create an accessible object for an object of a particular GType."],["Relation","An object used to describe a relation between a object and one or more other objects."],["RelationSet","A set of AtkRelations, normally the set of AtkRelations which an AtkObject has."],["Selection","The ATK interface implemented by container objects whose [`Object`][crate::Object] children can be selected."],["Socket","Container for AtkPlug objects from other processes"],["StateSet","An AtkStateSet contains the states of an object."],["StreamableContent","The ATK interface which provides access to streamable content."],["Table","The ATK interface implemented for UI components which contain tabular or row/column information."],["TableCell","The ATK interface implemented for a cell inside a two-dimentional [`Table`][crate::Table]"],["Text","The ATK interface implemented by components with text content."],["TextRange","A structure used to describe a text range."],["TextRectangle","A structure used to store a rectangle used by AtkText."],["Util","A set of ATK utility functions for event and toolkit support."],["Value","The ATK interface implemented by valuators and components which display or select a value from a bounded range of values."],["Window","The ATK Interface provided by UI components that represent a top-level window."]],"type":[["AttributeSet",""],["State",""]]};
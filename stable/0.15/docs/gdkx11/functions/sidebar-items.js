initSidebarItems({"fn":[["x11_atom_to_xatom","Converts from a [`gdk::Atom`][crate::gdk::Atom] to the X atom for the default GDK display with the same string value."],["x11_atom_to_xatom_for_display","Converts from a [`gdk::Atom`][crate::gdk::Atom] to the X atom for a [`gdk::Display`][crate::gdk::Display] with the same string value. The special value `GDK_NONE` is converted to `None`."],["x11_device_get_id","Returns the device ID as seen by XInput2."],["x11_device_manager_lookup","Returns the [`gdk::Device`][crate::gdk::Device] that wraps the given device ID."],["x11_get_default_root_xwindow","Gets the root window of the default screen (see [`x11_get_default_screen()`][crate::x11_get_default_screen()])."],["x11_get_default_screen","Gets the default GTK+ screen number."],["x11_get_server_time","Routine to get the current X server time stamp."],["x11_get_xatom_by_name","Returns the X atom for GDK’s default display corresponding to `atom_name`. This function caches the result, so if called repeatedly it is much faster than XInternAtom(), which is a round trip to the server each time."],["x11_get_xatom_by_name_for_display","Returns the X atom for a [`gdk::Display`][crate::gdk::Display] corresponding to `atom_name`. This function caches the result, so if called repeatedly it is much faster than XInternAtom(), which is a round trip to the server each time."],["x11_get_xatom_name","Returns the name of an X atom for GDK’s default display. This function is meant mainly for debugging, so for convenience, unlike XAtomName() and [`gdk::Atom::name()`][crate::gdk::Atom::name()], the result doesn’t need to be freed. Also, this function will never return [`None`], even if `xatom` is invalid."],["x11_get_xatom_name_for_display","Returns the name of an X atom for its display. This function is meant mainly for debugging, so for convenience, unlike XAtomName() and [`gdk::Atom::name()`][crate::gdk::Atom::name()], the result doesn’t need to be freed."],["x11_grab_server","Call [`X11Display::grab()`][crate::X11Display::grab()] on the default display. To ungrab the server again, use [`x11_ungrab_server()`][crate::x11_ungrab_server()]."],["x11_register_standard_event_type","Registers interest in receiving extension events with type codes between `event_base` and `event_base + n_events - 1`. The registered events must have the window field in the same place as core X events (this is not the case for e.g. XKB extension events)."],["x11_set_sm_client_id","Sets the `SM_CLIENT_ID` property on the application’s leader window so that the window manager can save the application’s state using the X11R6 ICCCM session management protocol."],["x11_ungrab_server","Ungrab the default display after it has been grabbed with [`x11_grab_server()`][crate::x11_grab_server()]."],["x11_xatom_to_atom","Convert from an X atom for the default display to the corresponding [`gdk::Atom`][crate::gdk::Atom]."],["x11_xatom_to_atom_for_display","Convert from an X atom for a [`gdk::Display`][crate::gdk::Display] to the corresponding [`gdk::Atom`][crate::gdk::Atom]."]]});
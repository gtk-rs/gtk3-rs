// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use crate::Bin;
use crate::Buildable;
use crate::Container;
use crate::Dialog;
use crate::FileChooser;
use crate::Widget;
use crate::Window;
use std::fmt;

glib::wrapper! {
    #[doc(alias = "GtkFileChooserDialog")]
    pub struct FileChooserDialog(Object<ffi::GtkFileChooserDialog, ffi::GtkFileChooserDialogClass>) @extends Dialog, Window, Bin, Container, Widget, @implements Buildable, FileChooser;

    match fn {
        type_ => || ffi::gtk_file_chooser_dialog_get_type(),
    }
}

impl FileChooserDialog {
    //#[doc(alias = "gtk_file_chooser_dialog_new")]
    //pub fn new(title: Option<&str>, parent: Option<&impl IsA<Window>>, action: FileChooserAction, first_button_text: Option<&str>, : /*Unknown conversion*//*Unimplemented*/Fundamental: VarArgs) -> FileChooserDialog {
    //    unsafe { TODO: call ffi:gtk_file_chooser_dialog_new() }
    //}
}

pub const NONE_FILE_CHOOSER_DIALOG: Option<&FileChooserDialog> = None;

impl fmt::Display for FileChooserDialog {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        f.write_str("FileChooserDialog")
    }
}
